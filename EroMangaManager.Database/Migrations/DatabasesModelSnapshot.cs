// <auto-generated />
using EroMangaManager.Database.Tables;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EroMangaManager.Database.Migrations
{
    [DbContext(typeof(Databases))]
    partial class DatabasesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21");

            modelBuilder.Entity("EroMangaManager.Database.Entities.DefaultTagFilter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("DefaultTagFilter");
                });

            modelBuilder.Entity("EroMangaManager.Database.Entities.ImageFilter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT");

                    b.Property<long>("ZipEntryLength")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ImageFilters");
                });

            modelBuilder.Entity("EroMangaManager.Database.Entities.MangaTag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AbsolutePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("CM_session")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDL")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFullColor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<string>("MagazinePublished")
                        .HasColumnType("TEXT");

                    b.Property<string>("MangaName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NonMosaic")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PaisIsDouble")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Relative_ACG")
                        .HasColumnType("TEXT");

                    b.Property<string>("Translator")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnknownTags")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("MangaTagDatas");
                });

            modelBuilder.Entity("EroMangaManager.Database.Entities.ReadingInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReadingPosition")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ReadingRecords");
                });

            modelBuilder.Entity("EroMangaManager.Database.Entities.UserDefinedTag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TagName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TagPieces")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("UserDefinedTags");
                });
#pragma warning restore 612, 618
        }
    }
}
