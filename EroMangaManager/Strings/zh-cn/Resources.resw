<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFolderButton.Content" xml:space="preserve">
    <value>添加文件夹</value>
  </data>
  <data name="BookcaseItem.Content" xml:space="preserve">
    <value>书架</value>
  </data>
  <data name="BookcaseItem.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>漫画书架</value>
  </data>
  <data name="CommonSettingNavigationViewItem.Content" xml:space="preserve">
    <value>一般设置</value>
  </data>
  <data name="DeleteButton.Content" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteFileConfirmPage.PrimaryButtonText" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="DeleteFileConfirmPage.SecondaryButtonText" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="DeleteFileConfirmPage.Title" xml:space="preserve">
    <value>确认删除文件？</value>
  </data>
  <data name="DeleteSourceMangaFileFlyoutItem.Text" xml:space="preserve">
    <value>删除源文件</value>
  </data>
  <data name="ErrorZipPageButton.Content" xml:space="preserve">
    <value>异常Zip</value>
  </data>
  <data name="ExportPDFFlyoutItem.Text" xml:space="preserve">
    <value>导出为PDF</value>
  </data>
  <data name="FilterImageONOFF.Header" xml:space="preserve">
    <value>是否启用单页过滤功能（开启此功能将减慢漫画打开速度）</value>
  </data>
  <data name="FilterImageONOFF.OffContent" xml:space="preserve">
    <value>已禁用</value>
  </data>
  <data name="FilterImageONOFF.OnContent" xml:space="preserve">
    <value>已启用</value>
  </data>
  <data name="FilterThisImage.Text" xml:space="preserve">
    <value>不显示此图</value>
  </data>
  <data name="FindNavItem.Content" xml:space="preserve">
    <value>查找</value>
  </data>
  <data name="FullScreenToggle.Content" xml:space="preserve">
    <value>全屏</value>
  </data>
  <data name="FunctionPageShower.Content" xml:space="preserve">
    <value>工具箱</value>
  </data>
  <data name="FunctionPageShower.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>工具箱</value>
  </data>
  <data name="Function_FindSameMangaName.Content" xml:space="preserve">
    <value>查找相同漫画</value>
  </data>
  <data name="Function_RemoveRepeatTags.Content" xml:space="preserve">
    <value>移除重复本子标签</value>
  </data>
  <data name="GollectionVMInitialingHint.Text" xml:space="preserve">
    <value>正在初始化文件夹，现在使用工具功能可能出错</value>
  </data>
  <data name="HintAddFirstFolder.Text" xml:space="preserve">
    <value>目前没有文件夹，请添加你的第一个扫描文件夹</value>
  </data>
  <data name="IsEmptyFolderShow.Header" xml:space="preserve">
    <value>是否显示空文件夹</value>
  </data>
  <data name="IsEmptyFolderShow.OffContent" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="IsEmptyFolderShow.OnContent" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="LaunchFileFlyoutItem.Text" xml:space="preserve">
    <value>打开文件</value>
  </data>
  <data name="LaunchFolderButton.Content" xml:space="preserve">
    <value>打开文件夹</value>
  </data>
  <data name="LaunchFolderFlyoutItem.Text" xml:space="preserve">
    <value>打开所在文件夹</value>
  </data>
  <data name="ListItem.Content" xml:space="preserve">
    <value>文件夹</value>
  </data>
  <data name="ListItem.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>已固定文件夹</value>
  </data>
  <data name="MailFeedback.Content" xml:space="preserve">
    <value>邮件反馈</value>
  </data>
  <data name="MangaTagDetailPage.CloseButtonText" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="MangaTagDetailPage.PrimaryButtonText" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="MangaTagEditPage.CloseButtonText" xml:space="preserve">
    <value>不作调整</value>
  </data>
  <data name="MangaTagEditPage.PrimaryButtonText" xml:space="preserve">
    <value>确认调整</value>
  </data>
  <data name="MangaTags.Text" xml:space="preserve">
    <value>本子标签</value>
  </data>
  <data name="MangaTypes.Text" xml:space="preserve">
    <value>标签分类</value>
  </data>
  <data name="MenuItem1.Text" xml:space="preserve">
    <value>查看信息</value>
  </data>
  <data name="NavigateUriButton.Content" xml:space="preserve">
    <value>商店中打开</value>
  </data>
  <data name="NoChosenFolder.Text" xml:space="preserve">
    <value>未选择文件夹</value>
  </data>
  <data name="OpenButton.Content" xml:space="preserve">
    <value>打开</value>
  </data>
  <data name="OrderButton.Label" xml:space="preserve">
    <value>切换排序</value>
  </data>
  <data name="ReadItem.Content" xml:space="preserve">
    <value>正在阅读</value>
  </data>
  <data name="ReadItem.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>正在阅读</value>
  </data>
  <data name="RefreshButton.Label" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="RemoveFolderButton.Content" xml:space="preserve">
    <value>移除文件夹</value>
  </data>
  <data name="SaveAs.Text" xml:space="preserve">
    <value>另存为</value>
  </data>
  <data name="SetAsDefaultBookcaseFolder.Content" xml:space="preserve">
    <value>设置为默认展示文件夹</value>
  </data>
  <data name="SetBack.Text" xml:space="preserve">
    <value>还原</value>
  </data>
  <data name="SettingFilterImageButton.Content" xml:space="preserve">
    <value>过滤图库</value>
  </data>
  <data name="SettingTagButton.Content" xml:space="preserve">
    <value>标签管理</value>
  </data>
  <data name="ShowFolderBookcase.Content" xml:space="preserve">
    <value>显示书架</value>
  </data>
  <data name="StorageDeleteOption.Header" xml:space="preserve">
    <value>删除模式</value>
  </data>
  <data name="StorageDeleteOption.OffContent" xml:space="preserve">
    <value>移动到回收站</value>
  </data>
  <data name="StorageDeleteOption.OnContent" xml:space="preserve">
    <value>从磁盘删除</value>
  </data>
  <data name="Tags.Content" xml:space="preserve">
    <value>标签</value>
  </data>
  <data name="TranslateButton.Label" xml:space="preserve">
    <value>翻译</value>
  </data>
  <data name="UpdateRecordItem.Content" xml:space="preserve">
    <value>更新记录</value>
  </data>
  <data name="UsageButton.Content" xml:space="preserve">
    <value>使用说明</value>
  </data>
  <data name="WhetherShowDialogBeforeDelete.Header" xml:space="preserve">
    <value>是否直接删除</value>
  </data>
  <data name="WhetherShowDialogBeforeDelete.OffContent" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="WhetherShowDialogBeforeDelete.OnContent" xml:space="preserve">
    <value>是</value>
  </data>
</root>